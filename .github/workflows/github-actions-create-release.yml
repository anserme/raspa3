name: Create Release
on:
  workflow_dispatch:
    branches: [ "main" ]
    inputs:
      tag-name:
        description: 'Name of the tag that will be used for this release'
        required: true

jobs:
  release-job:
    permissions: write-all
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.step_upload_url.outputs.upload_url }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.tag-name }}
        release_name: Release ${{ github.event.inputs.tag-name }}
        draft: false
        prerelease: false
    - name: set upload_url output
      id: step_upload_url
      run: echo "upload_url=${{ steps.create_release.outputs.upload_url }}" >> "$GITHUB_OUTPUT"

  rocky-9-job:
    runs-on: ubuntu-latest
    needs: release-job
    container:
      image: ghcr.io/iraspa/rocky-9-llvm-18:latest
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.github_token }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: configure cmake raspa
        shell: bash
        run: |
          cmake -B ${{github.workspace}}/build -GNinja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_RPM_PACKAGE=ON -DBLA_SIZEOF_INTEGER=8 .
      - name: create raspa rpm package
        shell: bash
        run: |
          ninja -C ${{github.workspace}}/build package
          mv ${{github.workspace}}/build/raspa-3.0.0-1.el9.x86_64.rpm .
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release-job.outputs.upload_url }}
          asset_path: ./raspa-3.0.0-1.el9.x86_64.rpm
          asset_name: raspa-3.0.0-1.el9.x86_64.rpm
          asset_content_type: application/octet-stream

  rocky-8-job:
    runs-on: ubuntu-latest
    needs: release-job
    container:
      image: ghcr.io/iraspa/rocky-8-llvm-18:latest
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.github_token }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: configure cmake raspa
        shell: bash
        run: |
          yum install -y blas64
          cmake -B ${{github.workspace}}/build -GNinja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_RPM_PACKAGE=ON -DBLAS_LIBRARIES=/usr/lib64/libblas64_.so.3 -DLAPACK_LIBRARIES=/usr/lib64/liblapack64_.so.3 .
      - name: create raspa rpm package
        shell: bash
        run: |
          ninja -C ${{github.workspace}}/build package
          mv ${{github.workspace}}/build/raspa-3.0.0-1.el8.x86_64.rpm .
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release-job.outputs.upload_url }}
          asset_path: ./raspa-3.0.0-1.el8.x86_64.rpm
          asset_name: raspa-3.0.0-1.el8.x86_64.rpm
          asset_content_type: application/octet-stream

  rocky-7-job:
    runs-on: ubuntu-latest
    needs: release-job
    container:
      image: ghcr.io/iraspa/rocky-7-llvm-18:latest
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.github_token }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      - name: configure cmake raspa
        shell: bash
        run: |
          yum install -y blas64
          cmake -B ${{github.workspace}}/build -GNinja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_RPM_PACKAGE=ON -DBLAS_LIBRARIES=/usr/lib64/libblas64.so.3 -DLAPACK_LIBRARIES=/usr/lib64/liblapack64.so.3 .
      - name: create raspa rpm package
        shell: bash
        run: |
          ninja -C ${{github.workspace}}/build package
          mv ${{github.workspace}}/build/raspa-3.0.0-1.el7.x86_64.rpm .
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release-job.outputs.upload_url }}
          asset_path: ./raspa-3.0.0-1.el7.x86_64.rpm
          asset_name: raspa-3.0.0-1.el7.x86_64.rpm
          asset_content_type: application/octet-stream

  centos-6-job:
    runs-on: ubuntu-latest
    needs: release-job
    steps:
      - name: configure cmake raspa
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/iraspa/centos-6-llvm-18:latest
          options: -v ${{ github.workspace }}:/tmp2
          run: |
            yum install -y rpm-build
            git clone https://github.com/iraspa/raspa3
            cd raspa3
            cmake -B ${{github.workspace}}/build -GNinja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_CENTOS6_PACKAGE=ON -DOpenMP_CXX_FLAGS="-fopenmp=libgomp" .
            ninja -C ${{github.workspace}}/build package
            cp ${{github.workspace}}/build//raspa-3.0.0-1.el6.x86_64.rpm /tmp2
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release-job.outputs.upload_url }}
          asset_path: ./raspa-3.0.0-1.el6.x86_64.rpm
          asset_name: raspa-3.0.0-1.el6.x86_64.rpm
          asset_content_type: application/octet-stream


  ubuntu-24-job:
    runs-on: ubuntu-latest
    needs: release-job
    container:
      image: ubuntu:24.04
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: configure cmake raspa
        shell: bash
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive TZ=Europe/Amsterdam apt-get -y install tzdata 
          apt-get install -y --no-install-recommends git ca-certificates cmake ninja-build
          apt-get install -y --no-install-recommends llvm clang clang-tools clang-tidy libc++-dev libc++abi-dev libomp-dev
          apt-get install -y --no-install-recommends python3 pybind11-dev python3-pybind11 
          apt-get install -y --no-install-recommends liblapack64-dev libblas64-dev 
          cmake -B ${{github.workspace}}/build -GNinja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_DEB_PACKAGE=ON -DBLA_SIZEOF_INTEGER=8 .
      - name: create raspa deb package
        shell: bash
        run: |
          ninja -C ${{github.workspace}}/build package
          mv ${{github.workspace}}/build/raspa_3.0.0_amd64.deb .
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release-job.outputs.upload_url }}
          asset_path: ./raspa_3.0.0_amd64.deb
          asset_name: raspa_3.0.0_amd64-ubuntu-24.deb
          asset_content_type: application/octet-stream

  ubuntu-22-job:
    runs-on: ubuntu-latest
    needs: release-job
    container:
      image: ghcr.io/iraspa/ubuntu-22-llvm-18:latest
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.github_token }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: configure cmake raspa
        shell: bash
        run: |
          cmake -B ${{github.workspace}}/build -GNinja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_CXX_COMPILER=clang++-18 -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_DEB_PACKAGE=ON -DBLA_SIZEOF_INTEGER=8 .
      - name: create raspa deb package
        shell: bash
        run: |
          ninja -C ${{github.workspace}}/build package
          mv ${{github.workspace}}/build/raspa_3.0.0_amd64.deb .
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release-job.outputs.upload_url }}
          asset_path: ./raspa_3.0.0_amd64.deb
          asset_name: raspa_3.0.0_amd64-ubuntu-22.deb
          asset_content_type: application/octet-stream

  ubuntu-20-job:
    runs-on: ubuntu-latest
    needs: release-job
    container:
      image: ghcr.io/iraspa/ubuntu-20-llvm-18:latest
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.github_token }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: configure cmake raspa
        shell: bash
        run: |
          cmake -B ${{github.workspace}}/build -GNinja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_CXX_COMPILER=clang++-18 -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_DEB_PACKAGE=ON -DBLA_SIZEOF_INTEGER=8 .
      - name: create raspa deb package
        shell: bash
        run: |
          ninja -C ${{github.workspace}}/build package
          mv ${{github.workspace}}/build/raspa_3.0.0_amd64.deb .
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release-job.outputs.upload_url }}
          asset_path: ./raspa_3.0.0_amd64.deb
          asset_name: raspa_3.0.0_amd64-ubuntu-20.deb
          asset_content_type: application/octet-stream


  archlinux-job:
    runs-on: ubuntu-latest
    needs: release-job
    container:
      image: ghcr.io/iraspa/archlinux-llvm-18:latest
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.github_token }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          path: src
      - name: create package
        shell: bash
        run: |
          cp -r src /tmp/src
          cd /tmp/
          chown -R nobody src
          cp src/packaging/PKGBUILD .
          sudo -u nobody makepkg -e
          cd -
          cp /tmp/raspa-3.0.0-1-x86_64.pkg.tar.zst .
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release-job.outputs.upload_url }}
          asset_path: ./raspa-3.0.0-1-x86_64.pkg.tar.zst
          asset_name: raspa-3.0.0-1-x86_64.pkg.tar.zst
          asset_content_type: application/octet-stream


  fedora-40-job:
    runs-on: ubuntu-latest
    needs: release-job
    container:
      image: fedora:40
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: configure cmake raspa
        shell: bash
        run: |
          dnf update -y
          dnf install -y 'dnf-command(config-manager)'
          dnf install -y --setopt=install_weak_deps=False  wget git rpm-build
          dnf install -y --setopt=install_weak_deps=False  llvm cmake clang clang-tools-extra ninja-build
          dnf install -y --setopt=install_weak_deps=False  libomp-devel libcxx libcxxabi libcxx-devel libcxxabi-devel libcxx-static libcxxabi-static
          dnf install -y --setopt=install_weak_deps=False  lapack-devel lapack64 blas64
          dnf install -y --setopt=install_weak_deps=False python3 python3-devel python3-pybind11
          dnf install -y --setopt=install_weak_deps=False pybind11-devel
          cmake -B ${{github.workspace}}/build -GNinja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_RPM_PACKAGE=ON -DBLA_SIZEOF_INTEGER=8 .
      - name: create raspa rpm package
        shell: bash
        run: |
          ninja -C ${{github.workspace}}/build package
          mv ${{github.workspace}}/build/raspa-3.0.0-1.fc40.x86_64.rpm .
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release-job.outputs.upload_url }}
          asset_path: ./raspa-3.0.0-1.fc40.x86_64.rpm
          asset_name: raspa-3.0.0-1.fc40.x86_64.rpm
          asset_content_type: application/octet-stream

  fedora-39-job:
    runs-on: ubuntu-latest
    needs: release-job
    container:
      image: ghcr.io/iraspa/fedora-39-llvm-18:latest
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.github_token }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: configure cmake raspa
        shell: bash
        run: |
          cmake -B ${{github.workspace}}/build -GNinja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_RPM_PACKAGE=ON -DBLA_SIZEOF_INTEGER=8 .
      - name: create raspa rpm package
        shell: bash
        run: |
          ninja -C ${{github.workspace}}/build package
          mv ${{github.workspace}}/build/raspa-3.0.0-1.fc39.x86_64.rpm .
      - name: upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release-job.outputs.upload_url }}
          asset_path: ./raspa-3.0.0-1.fc39.x86_64.rpm
          asset_name: raspa-3.0.0-1.fc39.x86_64.rpm
          asset_content_type: application/octet-stream

  fedora-38-job:
    runs-on: ubuntu-latest
    needs: release-job
    container:
      image: ghcr.io/iraspa/fedora-38-llvm-18:latest
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.github_token }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: configure cmake raspa
        shell: bash
        run: |
          cmake -B ${{github.workspace}}/build -GNinja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_RPM_PACKAGE=ON -DBLA_SIZEOF_INTEGER=8 .
      - name: create raspa rpm package
        shell: bash
        run: |
          ninja -C ${{github.workspace}}/build package
          mv ${{github.workspace}}/build/raspa-3.0.0-1.fc38.x86_64.rpm .
      - name: upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release-job.outputs.upload_url }}
          asset_path: ./raspa-3.0.0-1.fc38.x86_64.rpm
          asset_name: raspa-3.0.0-1.fc38.x86_64.rpm
          asset_content_type: application/octet-stream

  fedora-37-job:
    runs-on: ubuntu-latest
    needs: release-job
    container:
      image: ghcr.io/iraspa/fedora-37-llvm-18:latest
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.github_token }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: configure cmake raspa
        shell: bash
        run: |
          cmake -B ${{github.workspace}}/build -GNinja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_RPM_PACKAGE=ON -DBLA_SIZEOF_INTEGER=8 .
      - name: create raspa rpm package
        shell: bash
        run: |
          ninja -C ${{github.workspace}}/build package
          mv ${{github.workspace}}/build/raspa-3.0.0-1.fc37.x86_64.rpm .
      - name: upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release-job.outputs.upload_url }}
          asset_path: ./raspa-3.0.0-1.fc37.x86_64.rpm
          asset_name: raspa-3.0.0-1.fc37.x86_64.rpm
          asset_content_type: application/octet-stream

  fedora-36-job:
    runs-on: ubuntu-latest
    needs: release-job
    container:
      image: ghcr.io/iraspa/fedora-36-llvm-18:latest
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.github_token }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: configure cmake raspa
        shell: bash
        run: |
          cmake -B ${{github.workspace}}/build -GNinja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_RPM_PACKAGE=ON -DBLA_SIZEOF_INTEGER=8 .
      - name: create raspa rpm package
        shell: bash
        run: |
          ninja -C ${{github.workspace}}/build package
          mv ${{github.workspace}}/build/raspa-3.0.0-1.fc36.x86_64.rpm .
      - name: upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release-job.outputs.upload_url }}
          asset_path: ./raspa-3.0.0-1.fc36.x86_64.rpm
          asset_name: raspa-3.0.0-1.fc36.x86_64.rpm
          asset_content_type: application/octet-stream

  fedora-35-job:
    runs-on: ubuntu-latest
    needs: release-job
    container:
      image: ghcr.io/iraspa/fedora-35-llvm-18:latest
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.github_token }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: configure cmake raspa
        shell: bash
        run: |
          cmake -B ${{github.workspace}}/build -GNinja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_RPM_PACKAGE=ON -DBLA_SIZEOF_INTEGER=8 .
      - name: create raspa rpm package
        shell: bash
        run: |
          ninja -C ${{github.workspace}}/build package
          mv ${{github.workspace}}/build/raspa-3.0.0-1.fc35.x86_64.rpm .
      - name: upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release-job.outputs.upload_url }}
          asset_path: ./raspa-3.0.0-1.fc35.x86_64.rpm
          asset_name: raspa-3.0.0-1.fc35.x86_64.rpm
          asset_content_type: application/octet-stream
